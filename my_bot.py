from flask import Flask, request
import requests
import os

app = Flask(__name__)

TOKEN = '8403421825:AAH9dpr4wUydrj3bCDsDpR21MunzPwh91d4'  # ‚Üê –≤—Å—Ç–∞–≤—å —Ç–æ–∫–µ–Ω –±–æ—Ç–∞
URL = f'https://api.telegram.org/bot{TOKEN}/sendMessage'

# –ü—Ä–æ—Å—Ç–∞—è –±–∞–∑–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (–≤ –ø–∞–º—è—Ç–∏)
user_segments = {}

# –ö–Ω–æ–ø–∫–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Å–µ–≥–º–µ–Ω—Ç–∞—Ü–∏–∏
def get_main_menu():
    return {
        "keyboard": [
            [{"text": "–•–æ—á—É –Ω–∞–≤–µ—Å—Ç–∏ –ø–æ—Ä—è–¥–æ–∫ –≤ –±–∏–∑–Ω–µ—Å–µ"}],
            [{"text": "–•–æ—á—É –ø—Ä–æ–π—Ç–∏ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫—É"}],
            [{"text": "–•–æ—á—É –Ω–∞—á–∞—Ç—å —Å –Ω—É–ª—è"}]
        ],
        "resize_keyboard": True,
        "one_time_keyboard": True
    }

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Ö–æ–¥—è—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
@app.route('/', methods=['POST'])
def webhook():
    data = request.get_json()

    if 'message' in data:
        chat_id = data['message']['chat']['id']
        text = data['message'].get('text', '')

        # –û–±—Ä–∞–±–æ—Ç–∫–∞ /start
        if text == '/start':
            msg = (
                "–ü—Ä–∏–≤–µ—Ç! –Ø ‚Äî –±–æ—Ç –ø—Ä–æ–µ–∫—Ç–∞ LINIA. "
                "–ú—ã –ø–æ–º–æ–≥–∞–µ–º –≤–ª–∞–¥–µ–ª—å—Ü–∞–º –±–∏–∑–Ω–µ—Å–∞ –≤—ã–π—Ç–∏ –∏–∑ –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–∫–∏ –∏ –ø–æ—Å—Ç—Ä–æ–∏—Ç—å —Å–∏—Å—Ç–µ–º—É, –∫–æ—Ç–æ—Ä–∞—è —Ä–∞–±–æ—Ç–∞–µ—Ç –±–µ–∑ –ø–µ—Ä–µ–≥—Ä—É–∑–∞.\n\n"
                "–° —á–µ–≥–æ —Ç—ã —Ö–æ—á–µ—à—å –Ω–∞—á–∞—Ç—å?"
            )
            send_message(chat_id, msg, reply_markup=get_main_menu())

        # –°–µ–≥–º–µ–Ω—Ç–∞—Ü–∏—è –ø–æ –∫–Ω–æ–ø–∫–µ
        elif text == "–•–æ—á—É –Ω–∞–≤–µ—Å—Ç–∏ –ø–æ—Ä—è–¥–æ–∫ –≤ –±–∏–∑–Ω–µ—Å–µ":
            user_segments[chat_id] = '–æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è'
            send_message(chat_id, "–û—Ç–ª–∏—á–Ω–æ! –í–æ—Ç –∫–æ—Ä–æ—Ç–∫–æ–µ –≤–∏–¥–µ–æ –æ —Ç–æ–º, –∫–∞–∫ –≤—ã—Å—Ç—Ä–æ–∏—Ç—å —Å–∏—Å—Ç–µ–º—É —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è üëá")
            send_message(chat_id, "https://youtu.be/dQw4w9WgXcQ")  # –ó–∞–º–µ–Ω–∏ –Ω–∞ —Å–≤–æ—ë –≤–∏–¥–µ–æ
            send_message(chat_id, "–•–æ—á–µ—à—å –ø–æ–π—Ç–∏ –≥–ª—É–±–∂–µ? –ó–∞–ø–∏—à–∏—Å—å –Ω–∞ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫—É:", 
                         reply_markup={"keyboard": [[{"text": "–ó–∞–ø–∏—Å–∞—Ç—å—Å—è"}]], "resize_keyboard": True})

        elif text == "–•–æ—á—É –ø—Ä–æ–π—Ç–∏ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫—É":
            user_segments[chat_id] = '–¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞'
            send_message(chat_id, "–í–æ—Ç –∫–æ—Ä–æ—Ç–∫–∏–π PDF-–≥–∞–π–¥, –∫–∞–∫ –ø—Ä–æ—Ö–æ–¥–∏—Ç –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞:")
            send_message(chat_id, "https://example.com/diagnostic.pdf")  # –ó–∞–º–µ–Ω–∏ –Ω–∞ —Å–≤–æ–π —Ñ–∞–π–ª
            send_message(chat_id, "–ì–æ—Ç–æ–≤ –ø—Ä–æ–π—Ç–∏ –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å?", 
                         reply_markup={"keyboard": [[{"text": "–ó–∞–ø–∏—Å–∞—Ç—å—Å—è"}]], "resize_keyboard": True})

        elif text == "–•–æ—á—É –Ω–∞—á–∞—Ç—å —Å –Ω—É–ª—è":
            user_segments[chat_id] = '—Å—Ç–∞—Ä—Ç–∞–ø'
            send_message(chat_id, "–ö–ª–∞—Å—Å! –í–æ—Ç –ø–µ—Ä–≤—ã–π –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π —É—Ä–æ–∫ –ø–æ –∑–∞–ø—É—Å–∫—É –ø—Ä–æ–µ–∫—Ç–∞ —Å –Ω—É–ª—è:")
            send_message(chat_id, "https://example.com/start-course")  # –ó–∞–º–µ–Ω–∏ –Ω–∞ —Å–≤–æ–π –∫—É—Ä—Å

        elif text == "–ó–∞–ø–∏—Å–∞—Ç—å—Å—è":
            send_message(chat_id, "–í–æ—Ç —Å—Å—ã–ª–∫–∞ –Ω–∞ –∑–∞–ø–∏—Å—å üìÖ:\nhttps://example.com/booking")

        else:
            send_message(chat_id, "–ù–µ –ø–æ–Ω—è–ª —Ç–µ–±—è. –í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ –º–µ–Ω—é üëá", reply_markup=get_main_menu())

    return {'ok': True}

# –£–ø—Ä–æ—â—ë–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
def send_message(chat_id, text, reply_markup=None):
    payload = {
        'chat_id': chat_id,
        'text': text
    }
    if reply_markup:
        payload['reply_markup'] = reply_markup
    requests.post(URL, json=payload)

# –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
if __name__ == '__main__':
    app.run(host='0.0.0.0', port=10000)
